{
    "openapi": "3.0.3",
    "info": {
        "version": "0.1.0",
        "description": "The Swagger Documenatation for development",
        "title": "NuOJ development API documentation"
    },
    "paths": {
        "/api/heartbeat": {
            "get": {
                "tags": [
                    "system"
                ],
                "summary": "The route for checking the heartbeat of the system.",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200_message_ok"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "The route for login.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/login_requestbody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200_message_ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400_incorrect_format"
                    },
                    "401": {
                        "description": "The mail verification enabled but mail is not verify.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The mail verification enabled but mail is not verify."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Incorrect account or password.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Incorrect account or password."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "The route for register.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/register_requestbody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200_message_ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400_incorrect_format"
                    },
                    "403": {
                        "description": "The email or the handle is repeated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email or the handle is repeated."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The email, the handle or the password is invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Handle is invalid."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/oauth_info": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "The info of the OAuth.",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200_message_ok"
                    }
                }
            }
        },
        "/api/auth/verify_jwt": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "The route to verify the JWT cookie.",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200_message_ok"
                    },
                    "403": {
                        "description": "The jwt is invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "JWT is invalid."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/github_login": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "The rotue for GitHub OAuth.",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "OAuth code.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. It should redirect to the setup page to setup the handle or the index page."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_absent_code"
                    },
                    "403": {
                        "description": "GitHub OAuth login failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "GitHub OAuth login failed."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/google_login": {
            "get": {
                "tags": [
                    "auth"
                ],
                "parameters": [
                    {
                        "name": "error",
                        "in": "query",
                        "description": "Present if Google OAuth is error.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "OAuth code.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "summary": "The route for Google OAuth.",
                "responses": {
                    "200": {
                        "description": "OK. It should redirect to the setup page to setup the handle or the index page."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_absent_code"
                    },
                    "403": {
                        "description": "Google OAuth login failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Google OAuth login failed."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "The route for logout.",
                "responses": {
                    "200": {
                        "description": "OK.",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "OK"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/verify_mail": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "The route to verify the email.",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "The verification code.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/message_ok"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_absent_code"
                    },
                    "422": {
                        "description": "Invalid code.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid code."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/setup_handle": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "The route to setup the handle.",
                "parameters": [
                    {
                        "name": "hs",
                        "in": "cookie",
                        "description": "The hs (handle-setup) cookie.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "nuoj_test@nuoj.net"
                                    },
                                    "handle": {
                                        "type": "string",
                                        "example": "nuoj_me"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200_message_ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400_incorrect_format"
                    },
                    "401": {
                        "description": "HS cookie is invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "HS cookie is invalid."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The handle is repeated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The handle is repeated."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid handle.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid handle."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/resend_email": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "The route to resend the email.",
                "parameters": [
                    {
                        "name": "account",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200_message_ok"
                    },
                    "400": {
                        "description": "Account parameter is absent.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account parameter is absent."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Mail verification is disabled.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mail verification is disabled."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Account is absent.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account is absent."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile/{handle}": {
            "get": {
                "summary": "The route to get the profile of the specific handle.",
                "tags": [
                    "profile"
                ],
                "parameters": [
                    {
                        "name": "handle",
                        "in": "path",
                        "description": "The specific handle.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200_message_ok"
                    },
                    "403": {
                        "description": "Absent user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Absent user."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "The route to modify the profile with specific handle.",
                "tags": [
                    "profile"
                ],
                "parameters": [
                    {
                        "name": "handle",
                        "in": "path",
                        "description": "The specific handle",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "school": {
                                        "type": "string",
                                        "example": "ntut"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "Hi I'm another bio."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200_message_ok"
                    },
                    "400": {
                        "$ref": "#/components/responses/400_incorrect_format"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_authentication_required"
                    },
                    "403": {
                        "description": "No permission to change the user's personal information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No permission to change the user's personal information."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile/{handle}/avatar": {
            "get": {
                "summary": "The route to get the avatar of the specific handle.",
                "tags": [
                    "profile"
                ],
                "parameters": [
                    {
                        "name": "handle",
                        "in": "path",
                        "description": "The specific handle.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK.",
                        "content": {
                            "image/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Absent user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Absent user."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "The route to update the avatar of the specific handle.",
                "tags": [
                    "profile"
                ],
                "parameters": [
                    {
                        "name": "handle",
                        "in": "path",
                        "description": "The specific handle.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/*": {
                            "schema": {
                                "type": "object",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200_message_ok"
                    },
                    "400": {
                        "description": "The payload has been forbidden by the server.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The payload is not the image."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401_authentication_required"
                    },
                    "403": {
                        "description": "No permission to change the user's personal information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No permission to change the user's personal information."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "heartbeat_response": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "OK"
                    }
                }
            },
            "login_requestbody": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "The login account.",
                        "example": "nuoj_test"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of the account.",
                        "example": "some_password"
                    }
                }
            },
            "register_requestbody": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "nuoj_test@nuoj.net"
                    },
                    "handle": {
                        "type": "string",
                        "example": "nuoj_user"
                    },
                    "password": {
                        "type": "string",
                        "example": "nuoj_password"
                    }
                }
            },
            "oauth_info_response": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "OK"
                    },
                    "github_oauth_url": {
                        "type": "string",
                        "description": "Should be present if GitHun OAuth enabled.",
                        "example": "https://github.com/login/oauth/authorize?client_id=..."
                    },
                    "google_oauth_url": {
                        "type": "string",
                        "description": "Should be present if Google OAuth enabled.",
                        "example": "https://accounts.google.com/o/oauth2/v2/auth"
                    }
                }
            },
            "profile_handle_response": {
                "type": "object",
                "properties": {
                    "user_uid": {
                        "type": "string",
                        "example": "8d828772-50a5-4496-8114-0bf64132c125"
                    },
                    "email": {
                        "type": "string",
                        "example": "nuoj_test@nuoj.net"
                    },
                    "school": {
                        "type": "string",
                        "example": "nuoj_school"
                    },
                    "bio": {
                        "type": "string",
                        "example": "Hi I'm testing account."
                    },
                    "handle": {
                        "type": "string",
                        "example": "nuoj_test"
                    },
                    "role": {
                        "type": "integer",
                        "example": 0
                    }
                }
            },
            "message_ok": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "OK."
                    }
                }
            }
        },
        "responses": {
            "200_message_ok": {
                "description": "OK.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/message_ok"
                        }
                    }
                }
            },
            "400_incorrect_format": {
                "description": "The format of the payload is incorrect.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "The format of the payload is incorrect."
                                }
                            }
                        }
                    }
                }
            },
            "400_absent_code": {
                "description": "Absent code.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Absent code."
                                }
                            }
                        }
                    }
                }
            },
            "401_authentication_required": {
                "description": "Authentication required.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Authentication required."
                                }
                            }
                        }
                    }
                }
            }
        }

    }
}